### obtener todos los customers
GET http://localhost:3000/api/customers


### obtener un customer
GET http://localhost:3000/api/customers/684c8bd02ae4e5f0333939af

### crear un nuevo customer
POST http://localhost:3000/api/customers
Content-Type: application/json

{
  "name": "Gustavo 999",
  "customerClass": "warrior",
  "items": ["bow","arrow"],
  "attack": 10,
  "mana": 10,
  "hp": 10,
  "level": 1
}

### modificar un customer (PUT - recurso completo e idempotente)
PUT http://localhost:3000/api/customers/684b9907d79c41bdd6f62e03
Content-Type: application/json

{
  "name": "Anakin Skywalker",
  "customerClass": "Fallen Jedi",
  "items": ["Lightsaber", "Death Star"],
  "attack": 110,
  "mana": 500,
  "hp": 100,
  "level": 11    
}

### modificar un customer (PATCH - recurso parcial)
PATCH http://localhost:3000/api/customers/684b9907d79c41bdd6f62e03
Content-Type: application/json

{
  "name": "Anakin Ariotti",
  "customerClass": "Fallen Jedi",
  "items": ["Lightsaber", "X-Wing"],
  "level": 12    
}

### borrar un customer
DELETE http://localhost:3000/api/customers/684b9907d79c41bdd6f62e03



### Variables de entorno
@baseUrl = http://localhost:3000/api
@professionalId = 11
@pendingUserId1 = 2
@pendingUserId2 = 3
@approvedUserId = 6

### 1. Obtener todos los clientes
GET {{baseUrl}}/customers/all
x-user-id: {{professionalId}}

### 2. Aprobar un usuario pendiente (HU14)
PUT {{baseUrl}}/customers/{{pendingUserId1}}/validate
x-user-id: {{professionalId}}
Content-Type: application/json

{
  "status": "approved"
}

### 3. Rechazar un usuario pendiente (HU14)
PUT {{baseUrl}}/customers/{{pendingUserId2}}/validate
x-user-id: {{professionalId}}
Content-Type: application/json

{
  "status": "rejected"
}

### 4. Error: Intentar aprobar un usuario ya aprobado
PUT {{baseUrl}}/customers/{{approvedUserId}}/validate
x-user-id: {{professionalId}}
Content-Type: application/json

{
  "status": "approved"
}